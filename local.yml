---
- hosts: localhost
  connection: local
  vars_files:
    - vars/{{ ansible_distribution }}.yml

  pre_tasks:
    - name: install updates (Debian)
      tags: always
      apt:
        upgrade: dist
        update_cache: yes
      become: true
      when: ansible_distribution in ["Debian", "Ubuntu"]

  tasks:
    - block:
      - name: install base packages
        tags: always
        package:
          name:
            - tmux
            - tree
            - htop
            - git
            - pass
            - ffmpeg
            - figlet
            - toilet
      become: '{{ should_be_root }}'

    - name: install nodejs (Debian)
      block:
        - name: install nodejs (Debian) | install the gpg key
          tags: dev
          apt_key:
            url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
            state: present
        - name: install nodejs (Debian) | install the nodejs LTS repos
          tags: dev
          apt_repository:
            repo: "deb https://deb.nodesource.com/node_14.x {{ ansible_distribution_release }} main"
            state: present
            update_cache: yes
        - name: install nodejs (Debian) | install package (Debian)
          tags: dev
          apt:
            name: nodejs
            state: present
      become: true
      when: ansible_distribution in ["Debian", "Ubuntu"]

    - name: install nodejs (Darwin)
      tags: dev
      package:
        name: node
      when: ansible_distribution == 'MacOSX'

    - name: install neovim (Debian)
      tags: dev
      get_url:
        url: "https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage"
        dest: /usr/bin/nvim
        mode: 0755
      when: ansible_distribution in ["Debian", "Ubuntu"]

    - name: install neovim (Darwin)
      tags: dev
      homebrew:
        name: neovim
        state: head
      when: ansible_distribution == 'MacOSX'

    - name: install brave (Debian)
      block:
        - name: install brave (Debian) | install the https method driver for apt
          apt:
            name: apt-transport-https
            state: present
            update_cache: yes
        - name: install brave (Debian) | add the apt key
          apt_key:
            url: https://brave-browser-apt-release.s3.brave.com/brave-core.asc
            state: present
        - name: install brave (Debian) | add the apt repository
          apt_repository:
            repo: deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main
            state: present
        - name: install brave (Debian) | install package
          apt:
            name: brave-browser
            state: present
      become: true
      when: ansible_distribution in ["Debian", "Ubuntu"]

    - name: create required directories
      tags: always
      file:
        path: '{{ home_directory }}/{{ item }}'
        state: directory
        owner: '{{ owner }}'
        group: '{{ group }}'
        mode: 0755
      loop:
        - projects
        - playground
        - .vim
        - .config/nvim
        - .config/nvim/lua

    - name: sync dotfiles
      tags: always,dotfiles
      copy:
        src: 'files/dotfiles/{{ item.package }}/{{ item.path }}'
        dest: '{{ home_directory }}/{{ item.path }}'
        owner: '{{ owner }}'
        group: '{{ group }}'
      loop:
        - { package: 'bash', path: '.bashrc' }
        - { package: 'bash', path: '.bash_profile' }
        - { package: 'bash', path: '.inputrc' }
        - { package: 'zsh', path: '.zshrc' }
        - { package: 'tmux', path: '.tmux.conf' }
        - { package: 'git', path: '.gitconfig' }
        - { package: 'gcs', path: '.customize_environment' }
        - { package: 'vim', path: '.vimrc' }
        - { package: 'vim', path: '.vim/coc-settings.json' }
        - { package: 'nvim', path: '.config/nvim/init.vim' }
        - { package: 'nvim', path: '.config/nvim/coc-settings.json' }
        - { package: 'nvim', path: '.config/nvim/lua/init.lua' }
        - { package: 'nvim', path: '.config/nvim/lua/binds.lua' }

    - name: remove init.sh script
      tags: always
      file:
        path: '{{ home_directory }}/init.sh'
        state: absent
